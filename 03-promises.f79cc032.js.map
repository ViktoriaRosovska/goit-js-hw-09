{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBACF,MAAQC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAEM,OAC5BC,EAAgBC,SAASH,EAAOI,OACtC,IAAIC,EAAUF,SAASL,EAAMM,OACzBE,EAASH,SAASJ,EAAKK,OACvBG,EAAW,EACfC,YAAW,KACT,MAAMC,EAAUC,aAAY,KAkBhC,IAAuBC,EAAUd,GAjB3BU,GAAY,EACRA,EAAWL,GACbU,cAAcH,KAeCE,EAZHJ,EAYaV,EAZHQ,EAarB,IAAIQ,SAAQ,CAACC,EAASC,KACJC,KAAKC,SAAW,GAEvCH,EAAQ,C,SAACH,E,MAAUd,IAEnBkB,EAAO,C,SAAEJ,E,MAAUd,GAAQ,KAjBtBqB,MAAK,EAACP,SAAEA,EAAQd,MAAEA,MACjBR,EAAA8B,OAAOC,QAAQ,uBAAqBT,QAAiBd,MAAU,IAEhEwB,OAAM,EAACV,SAAEA,EAAQd,MAAEA,MAClBR,EAAA8B,OAAOG,QAAQ,sBAAoBX,QAAed,MAAU,IAEhEQ,GAAWC,EAAM,GAChBA,EAAO,GACXD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.target;\n  const countPosition = parseInt(amount.value);\n  let delayMs = parseInt(delay.value);\n  let stepMs = parseInt(step.value);\n  let position = 0;\n  setTimeout(() => {\n    const timerId = setInterval(() => {\n      position += 1;\n      if (position > countPosition) {\n        clearInterval(timerId);\n        return;\n      }\n      createPromise(position, delayMs)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      delayMs += stepMs; \n    }, stepMs)\n}, delayMs);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n     const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve({position, delay});\n  } else {\n    reject({ position, delay });\n  }\n  }) \n}\n"],"names":["$iQIUW","parcelRequire","form","document","querySelector","addEventListener","e","preventDefault","delay","delay1","step","amount","target","countPosition","parseInt","value","delayMs","stepMs","position1","setTimeout","timerId","setInterval","position","clearInterval","Promise","resolve","reject","Math","random","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.f79cc032.js.map"}